{"ast":null,"code":"import { systemApi } from '@/api/system';\nconst state = {\n  systems: [],\n  loading: false\n};\nconst mutations = {\n  SET_SYSTEMS(state, systems) {\n    state.systems = systems;\n  },\n  SET_LOADING(state, loading) {\n    state.loading = loading;\n  },\n  ADD_SYSTEM(state, system) {\n    state.systems.push(system);\n  },\n  UPDATE_SYSTEM(state, updatedSystem) {\n    const index = state.systems.findIndex(s => s.id === updatedSystem.id);\n    if (index !== -1) {\n      state.systems.splice(index, 1, updatedSystem);\n    }\n  },\n  DELETE_SYSTEM(state, systemId) {\n    state.systems = state.systems.filter(s => s.id !== systemId);\n  }\n};\nconst actions = {\n  async fetchSystems({\n    commit\n  }) {\n    commit('SET_LOADING', true);\n    try {\n      const response = await systemApi.getSystems();\n      commit('SET_SYSTEMS', response.data);\n    } catch (error) {\n      console.error('获取系统列表失败:', error);\n    } finally {\n      commit('SET_LOADING', false);\n    }\n  },\n  async createSystem({\n    commit\n  }, systemData) {\n    try {\n      const response = await systemApi.createSystem(systemData);\n      commit('ADD_SYSTEM', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('创建系统失败:', error);\n      throw error;\n    }\n  },\n  async updateSystem({\n    commit\n  }, {\n    id,\n    data\n  }) {\n    try {\n      const response = await systemApi.updateSystem(id, data);\n      commit('UPDATE_SYSTEM', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('更新系统失败:', error);\n      throw error;\n    }\n  },\n  async deleteSystem({\n    commit\n  }, systemId) {\n    try {\n      await systemApi.deleteSystem(systemId);\n      commit('DELETE_SYSTEM', systemId);\n    } catch (error) {\n      console.error('删除系统失败:', error);\n      throw error;\n    }\n  }\n};\nconst getters = {\n  getSystemById: state => id => {\n    return state.systems.find(s => s.id === id);\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["systemApi","state","systems","loading","mutations","SET_SYSTEMS","SET_LOADING","ADD_SYSTEM","system","push","UPDATE_SYSTEM","updatedSystem","index","findIndex","s","id","splice","DELETE_SYSTEM","systemId","filter","actions","fetchSystems","commit","response","getSystems","data","error","console","createSystem","systemData","updateSystem","deleteSystem","getters","getSystemById","find","namespaced"],"sources":["/Users/shaoliang/Documents/corsor_workplace/项目交付物管理/src/store/modules/system.js"],"sourcesContent":["import { systemApi } from '@/api/system'\n\nconst state = {\n  systems: [],\n  loading: false\n}\n\nconst mutations = {\n  SET_SYSTEMS(state, systems) {\n    state.systems = systems\n  },\n  SET_LOADING(state, loading) {\n    state.loading = loading\n  },\n  ADD_SYSTEM(state, system) {\n    state.systems.push(system)\n  },\n  UPDATE_SYSTEM(state, updatedSystem) {\n    const index = state.systems.findIndex(s => s.id === updatedSystem.id)\n    if (index !== -1) {\n      state.systems.splice(index, 1, updatedSystem)\n    }\n  },\n  DELETE_SYSTEM(state, systemId) {\n    state.systems = state.systems.filter(s => s.id !== systemId)\n  }\n}\n\nconst actions = {\n  async fetchSystems({ commit }) {\n    commit('SET_LOADING', true)\n    try {\n      const response = await systemApi.getSystems()\n      commit('SET_SYSTEMS', response.data)\n    } catch (error) {\n      console.error('获取系统列表失败:', error)\n    } finally {\n      commit('SET_LOADING', false)\n    }\n  },\n  \n  async createSystem({ commit }, systemData) {\n    try {\n      const response = await systemApi.createSystem(systemData)\n      commit('ADD_SYSTEM', response.data)\n      return response.data\n    } catch (error) {\n      console.error('创建系统失败:', error)\n      throw error\n    }\n  },\n  \n  async updateSystem({ commit }, { id, data }) {\n    try {\n      const response = await systemApi.updateSystem(id, data)\n      commit('UPDATE_SYSTEM', response.data)\n      return response.data\n    } catch (error) {\n      console.error('更新系统失败:', error)\n      throw error\n    }\n  },\n  \n  async deleteSystem({ commit }, systemId) {\n    try {\n      await systemApi.deleteSystem(systemId)\n      commit('DELETE_SYSTEM', systemId)\n    } catch (error) {\n      console.error('删除系统失败:', error)\n      throw error\n    }\n  }\n}\n\nconst getters = {\n  getSystemById: (state) => (id) => {\n    return state.systems.find(s => s.id === id)\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}