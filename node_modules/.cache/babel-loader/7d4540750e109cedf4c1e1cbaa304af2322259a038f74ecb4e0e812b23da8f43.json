{"ast":null,"code":"import { ref, reactive, onMounted, computed } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { getSystemList, createSystem, updateSystem, deleteSystem } from '@/api/system';\nimport { formatDate } from '@/utils/date';\nexport default {\n  name: 'SystemList',\n  setup() {\n    const loading = ref(false);\n    const systemList = ref([]);\n    const dialogVisible = ref(false);\n    const submitting = ref(false);\n    const isEdit = ref(false);\n    const formRef = ref();\n    const form = reactive({\n      id: null,\n      systemName: '',\n      systemCode: '',\n      description: '',\n      status: 1\n    });\n    const rules = {\n      systemName: [{\n        required: true,\n        message: '请输入系统名称',\n        trigger: 'blur'\n      }],\n      systemCode: [{\n        required: true,\n        message: '请输入系统编码',\n        trigger: 'blur'\n      }]\n    };\n    const dialogTitle = computed(() => {\n      return isEdit.value ? '编辑系统' : '新增系统';\n    });\n\n    // 加载系统列表\n    const loadSystemList = async () => {\n      loading.value = true;\n      try {\n        const response = await getSystemList();\n        systemList.value = response.data || [];\n      } catch (error) {\n        ElMessage.error('加载系统列表失败');\n        console.error('加载系统列表失败:', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 显示新增对话框\n    const showCreateDialog = () => {\n      isEdit.value = false;\n      dialogVisible.value = true;\n    };\n\n    // 显示编辑对话框\n    const showEditDialog = row => {\n      isEdit.value = true;\n      Object.assign(form, row);\n      dialogVisible.value = true;\n    };\n\n    // 重置表单\n    const resetForm = () => {\n      formRef.value?.resetFields();\n      Object.assign(form, {\n        id: null,\n        systemName: '',\n        systemCode: '',\n        description: '',\n        status: 1\n      });\n    };\n\n    // 提交表单\n    const handleSubmit = async () => {\n      try {\n        await formRef.value.validate();\n        submitting.value = true;\n        if (isEdit.value) {\n          await updateSystem(form);\n          ElMessage.success('系统更新成功');\n        } else {\n          await createSystem(form);\n          ElMessage.success('系统创建成功');\n        }\n        dialogVisible.value = false;\n        loadSystemList();\n      } catch (error) {\n        ElMessage.error(isEdit.value ? '系统更新失败' : '系统创建失败');\n        console.error('提交失败:', error);\n      } finally {\n        submitting.value = false;\n      }\n    };\n\n    // 删除系统\n    const handleDelete = async row => {\n      try {\n        await ElMessageBox.confirm(`确定要删除系统\"${row.name}\"吗？`, '确认删除', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        });\n        await deleteSystem(row.id);\n        ElMessage.success('系统删除成功');\n        loadSystemList();\n      } catch (error) {\n        if (error !== 'cancel') {\n          ElMessage.error('系统删除失败');\n          console.error('删除失败:', error);\n        }\n      }\n    };\n    onMounted(() => {\n      loadSystemList();\n    });\n    return {\n      loading,\n      systemList,\n      dialogVisible,\n      submitting,\n      isEdit,\n      formRef,\n      form,\n      rules,\n      dialogTitle,\n      formatDate,\n      showCreateDialog,\n      showEditDialog,\n      resetForm,\n      handleSubmit,\n      handleDelete\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","computed","ElMessage","ElMessageBox","getSystemList","createSystem","updateSystem","deleteSystem","formatDate","name","setup","loading","systemList","dialogVisible","submitting","isEdit","formRef","form","id","systemName","systemCode","description","status","rules","required","message","trigger","dialogTitle","value","loadSystemList","response","data","error","console","showCreateDialog","showEditDialog","row","Object","assign","resetForm","resetFields","handleSubmit","validate","success","handleDelete","confirm","confirmButtonText","cancelButtonText","type"],"sources":["/Users/shaoliang/Documents/corsor_workplace/项目交付物管理/src/views/System/SystemList.vue"],"sourcesContent":["<template>\n  <div class=\"system-list\">\n    <div class=\"page-header\">\n      <h2>系统管理</h2>\n      <el-button type=\"primary\" @click=\"showCreateDialog\">\n        <el-icon><Plus /></el-icon>\n        新增系统\n      </el-button>\n    </div>\n\n    <!-- 系统列表 -->\n    <el-card>\n      <el-table\n        :data=\"systemList\"\n        v-loading=\"loading\"\n        stripe\n        style=\"width: 100%\"\n      >\n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\n        <el-table-column prop=\"systemName\" label=\"系统名称\" />\n        <el-table-column prop=\"systemCode\" label=\"系统编码\" />\n        <el-table-column prop=\"description\" label=\"描述\" show-overflow-tooltip />\n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n          <template #default=\"scope\">\n            <el-tag :type=\"scope.row.status === 1 ? 'success' : 'danger'\">\n              {{ scope.row.status === 1 ? '启用' : '禁用' }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"180\">\n          <template #default=\"scope\">\n            {{ formatDate(scope.row.createTime) }}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"200\" fixed=\"right\">\n          <template #default=\"scope\">\n            <el-button size=\"small\" @click=\"showEditDialog(scope.row)\">\n              编辑\n            </el-button>\n            <el-button\n              size=\"small\"\n              type=\"danger\"\n              @click=\"handleDelete(scope.row)\"\n            >\n              删除\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n\n    <!-- 新增/编辑对话框 -->\n    <el-dialog\n      :title=\"dialogTitle\"\n      v-model=\"dialogVisible\"\n      width=\"500px\"\n      @close=\"resetForm\"\n    >\n      <el-form\n        ref=\"formRef\"\n        :model=\"form\"\n        :rules=\"rules\"\n        label-width=\"100px\"\n      >\n        <el-form-item label=\"系统名称\" prop=\"systemName\">\n          <el-input v-model=\"form.systemName\" placeholder=\"请输入系统名称\" />\n        </el-form-item>\n        <el-form-item label=\"系统编码\" prop=\"systemCode\">\n          <el-input v-model=\"form.systemCode\" placeholder=\"请输入系统编码\" />\n        </el-form-item>\n        <el-form-item label=\"描述\" prop=\"description\">\n          <el-input\n            v-model=\"form.description\"\n            type=\"textarea\"\n            :rows=\"3\"\n            placeholder=\"请输入系统描述\"\n          />\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-radio-group v-model=\"form.status\">\n            <el-radio :label=\"1\">启用</el-radio>\n            <el-radio :label=\"0\">禁用</el-radio>\n          </el-radio-group>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"submitting\">\n            确定\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted, computed } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { getSystemList, createSystem, updateSystem, deleteSystem } from '@/api/system'\nimport { formatDate } from '@/utils/date'\n\nexport default {\n  name: 'SystemList',\n  setup() {\n    const loading = ref(false)\n    const systemList = ref([])\n    const dialogVisible = ref(false)\n    const submitting = ref(false)\n    const isEdit = ref(false)\n    const formRef = ref()\n\n    const form = reactive({\n      id: null,\n      systemName: '',\n      systemCode: '',\n      description: '',\n      status: 1\n    })\n\n    const rules = {\n      systemName: [\n        { required: true, message: '请输入系统名称', trigger: 'blur' }\n      ],\n      systemCode: [\n        { required: true, message: '请输入系统编码', trigger: 'blur' }\n      ]\n    }\n\n    const dialogTitle = computed(() => {\n      return isEdit.value ? '编辑系统' : '新增系统'\n    })\n\n    // 加载系统列表\n    const loadSystemList = async () => {\n      loading.value = true\n      try {\n        const response = await getSystemList()\n        systemList.value = response.data || []\n      } catch (error) {\n        ElMessage.error('加载系统列表失败')\n        console.error('加载系统列表失败:', error)\n      } finally {\n        loading.value = false\n      }\n    }\n\n    // 显示新增对话框\n    const showCreateDialog = () => {\n      isEdit.value = false\n      dialogVisible.value = true\n    }\n\n    // 显示编辑对话框\n    const showEditDialog = (row) => {\n      isEdit.value = true\n      Object.assign(form, row)\n      dialogVisible.value = true\n    }\n\n    // 重置表单\n    const resetForm = () => {\n      formRef.value?.resetFields()\n      Object.assign(form, {\n        id: null,\n        systemName: '',\n        systemCode: '',\n        description: '',\n        status: 1\n      })\n    }\n\n    // 提交表单\n    const handleSubmit = async () => {\n      try {\n        await formRef.value.validate()\n        submitting.value = true\n\n        if (isEdit.value) {\n          await updateSystem(form)\n          ElMessage.success('系统更新成功')\n        } else {\n          await createSystem(form)\n          ElMessage.success('系统创建成功')\n        }\n\n        dialogVisible.value = false\n        loadSystemList()\n      } catch (error) {\n        ElMessage.error(isEdit.value ? '系统更新失败' : '系统创建失败')\n        console.error('提交失败:', error)\n      } finally {\n        submitting.value = false\n      }\n    }\n\n    // 删除系统\n    const handleDelete = async (row) => {\n      try {\n        await ElMessageBox.confirm(\n          `确定要删除系统\"${row.name}\"吗？`,\n          '确认删除',\n          {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }\n        )\n\n        await deleteSystem(row.id)\n        ElMessage.success('系统删除成功')\n        loadSystemList()\n      } catch (error) {\n        if (error !== 'cancel') {\n          ElMessage.error('系统删除失败')\n          console.error('删除失败:', error)\n        }\n      }\n    }\n\n    onMounted(() => {\n      loadSystemList()\n    })\n\n    return {\n      loading,\n      systemList,\n      dialogVisible,\n      submitting,\n      isEdit,\n      formRef,\n      form,\n      rules,\n      dialogTitle,\n      formatDate,\n      showCreateDialog,\n      showEditDialog,\n      resetForm,\n      handleSubmit,\n      handleDelete\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.system-list {\n  .page-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 20px;\n\n    h2 {\n      margin: 0;\n      color: #303133;\n    }\n  }\n\n  .dialog-footer {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}