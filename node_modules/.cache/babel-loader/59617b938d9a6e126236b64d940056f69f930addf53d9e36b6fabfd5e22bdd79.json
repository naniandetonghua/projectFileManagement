{"ast":null,"code":"import { getProjectList, getProjectById, createProject, updateProject, deleteProject, getProjectStats } from '@/api/project';\nconst state = {\n  projectList: [],\n  currentProject: null,\n  loading: false,\n  pagination: {\n    current: 1,\n    size: 10,\n    total: 0\n  },\n  stats: {}\n};\nconst mutations = {\n  SET_PROJECT_LIST(state, list) {\n    state.projectList = list;\n  },\n  SET_CURRENT_PROJECT(state, project) {\n    state.currentProject = project;\n  },\n  SET_LOADING(state, loading) {\n    state.loading = loading;\n  },\n  SET_PAGINATION(state, pagination) {\n    state.pagination = {\n      ...state.pagination,\n      ...pagination\n    };\n  },\n  SET_STATS(state, stats) {\n    state.stats = stats;\n  }\n};\nconst actions = {\n  // 获取项目列表\n  async getProjectList({\n    commit\n  }, params) {\n    commit('SET_LOADING', true);\n    try {\n      const response = await getProjectList(params);\n      commit('SET_PROJECT_LIST', response.content);\n      commit('SET_PAGINATION', {\n        current: response.currentPage + 1,\n        total: response.totalElements\n      });\n      return response;\n    } finally {\n      commit('SET_LOADING', false);\n    }\n  },\n  // 获取项目详情\n  async getProjectById({\n    commit\n  }, id) {\n    commit('SET_LOADING', true);\n    try {\n      const response = await getProjectById(id);\n      commit('SET_CURRENT_PROJECT', response);\n      return response;\n    } finally {\n      commit('SET_LOADING', false);\n    }\n  },\n  // 创建项目\n  async createProject({\n    dispatch\n  }, projectData) {\n    const response = await createProject(projectData);\n    // 刷新列表\n    dispatch('getProjectList', {\n      page: 0,\n      size: 10\n    });\n    return response;\n  },\n  // 更新项目\n  async updateProject({\n    dispatch\n  }, projectData) {\n    const response = await updateProject(projectData);\n    // 刷新列表\n    dispatch('getProjectList', {\n      page: 0,\n      size: 10\n    });\n    return response;\n  },\n  // 删除项目\n  async deleteProject({\n    dispatch\n  }, id) {\n    await deleteProject(id);\n    // 刷新列表\n    dispatch('getProjectList', {\n      page: 0,\n      size: 10\n    });\n  },\n  // 获取项目统计\n  async getProjectStats({\n    commit\n  }) {\n    const response = await getProjectStats();\n    commit('SET_STATS', response);\n    return response;\n  }\n};\nconst getters = {\n  projectList: state => state.projectList,\n  currentProject: state => state.currentProject,\n  loading: state => state.loading,\n  pagination: state => state.pagination,\n  stats: state => state.stats\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["getProjectList","getProjectById","createProject","updateProject","deleteProject","getProjectStats","state","projectList","currentProject","loading","pagination","current","size","total","stats","mutations","SET_PROJECT_LIST","list","SET_CURRENT_PROJECT","project","SET_LOADING","SET_PAGINATION","SET_STATS","actions","commit","params","response","content","currentPage","totalElements","id","dispatch","projectData","page","getters","namespaced"],"sources":["/Users/shaoliang/Documents/corsor_workplace/项目交付物管理/src/store/modules/project.js"],"sourcesContent":["import { getProjectList, getProjectById, createProject, updateProject, deleteProject, getProjectStats } from '@/api/project'\n\nconst state = {\n  projectList: [],\n  currentProject: null,\n  loading: false,\n  pagination: {\n    current: 1,\n    size: 10,\n    total: 0\n  },\n  stats: {}\n}\n\nconst mutations = {\n  SET_PROJECT_LIST(state, list) {\n    state.projectList = list\n  },\n  SET_CURRENT_PROJECT(state, project) {\n    state.currentProject = project\n  },\n  SET_LOADING(state, loading) {\n    state.loading = loading\n  },\n  SET_PAGINATION(state, pagination) {\n    state.pagination = { ...state.pagination, ...pagination }\n  },\n  SET_STATS(state, stats) {\n    state.stats = stats\n  }\n}\n\nconst actions = {\n  // 获取项目列表\n  async getProjectList({ commit }, params) {\n    commit('SET_LOADING', true)\n    try {\n      const response = await getProjectList(params)\n      commit('SET_PROJECT_LIST', response.content)\n      commit('SET_PAGINATION', {\n        current: response.currentPage + 1,\n        total: response.totalElements\n      })\n      return response\n    } finally {\n      commit('SET_LOADING', false)\n    }\n  },\n\n  // 获取项目详情\n  async getProjectById({ commit }, id) {\n    commit('SET_LOADING', true)\n    try {\n      const response = await getProjectById(id)\n      commit('SET_CURRENT_PROJECT', response)\n      return response\n    } finally {\n      commit('SET_LOADING', false)\n    }\n  },\n\n  // 创建项目\n  async createProject({ dispatch }, projectData) {\n    const response = await createProject(projectData)\n    // 刷新列表\n    dispatch('getProjectList', { page: 0, size: 10 })\n    return response\n  },\n\n  // 更新项目\n  async updateProject({ dispatch }, projectData) {\n    const response = await updateProject(projectData)\n    // 刷新列表\n    dispatch('getProjectList', { page: 0, size: 10 })\n    return response\n  },\n\n  // 删除项目\n  async deleteProject({ dispatch }, id) {\n    await deleteProject(id)\n    // 刷新列表\n    dispatch('getProjectList', { page: 0, size: 10 })\n  },\n\n  // 获取项目统计\n  async getProjectStats({ commit }) {\n    const response = await getProjectStats()\n    commit('SET_STATS', response)\n    return response\n  }\n}\n\nconst getters = {\n  projectList: state => state.projectList,\n  currentProject: state => state.currentProject,\n  loading: state => state.loading,\n  pagination: state => state.pagination,\n  stats: state => state.stats\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}