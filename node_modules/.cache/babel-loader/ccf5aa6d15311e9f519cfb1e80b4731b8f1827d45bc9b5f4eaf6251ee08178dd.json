{"ast":null,"code":"import { getDeliverableList, getDeliverableById, createDeliverable, updateDeliverable, deleteDeliverable, getDeliverableStats } from '@/api/deliverable';\nconst state = {\n  deliverableList: [],\n  currentDeliverable: null,\n  loading: false,\n  pagination: {\n    current: 1,\n    size: 10,\n    total: 0\n  },\n  stats: {}\n};\nconst mutations = {\n  SET_DELIVERABLE_LIST(state, list) {\n    state.deliverableList = list;\n  },\n  SET_CURRENT_DELIVERABLE(state, deliverable) {\n    state.currentDeliverable = deliverable;\n  },\n  SET_LOADING(state, loading) {\n    state.loading = loading;\n  },\n  SET_PAGINATION(state, pagination) {\n    state.pagination = {\n      ...state.pagination,\n      ...pagination\n    };\n  },\n  SET_STATS(state, stats) {\n    state.stats = stats;\n  }\n};\nconst actions = {\n  // 获取交付物列表\n  async getDeliverableList({\n    commit\n  }, params) {\n    commit('SET_LOADING', true);\n    try {\n      const response = await getDeliverableList(params);\n      commit('SET_DELIVERABLE_LIST', response.content);\n      commit('SET_PAGINATION', {\n        current: response.currentPage + 1,\n        total: response.totalElements\n      });\n      return response;\n    } finally {\n      commit('SET_LOADING', false);\n    }\n  },\n  // 获取交付物详情\n  async getDeliverableById({\n    commit\n  }, id) {\n    commit('SET_LOADING', true);\n    try {\n      const response = await getDeliverableById(id);\n      commit('SET_CURRENT_DELIVERABLE', response);\n      return response;\n    } finally {\n      commit('SET_LOADING', false);\n    }\n  },\n  // 创建交付物\n  async createDeliverable({\n    dispatch\n  }, deliverableData) {\n    const response = await createDeliverable(deliverableData);\n    // 刷新列表\n    dispatch('getDeliverableList', {\n      page: 0,\n      size: 10\n    });\n    return response;\n  },\n  // 更新交付物\n  async updateDeliverable({\n    dispatch\n  }, deliverableData) {\n    const response = await updateDeliverable(deliverableData);\n    // 刷新列表\n    dispatch('getDeliverableList', {\n      page: 0,\n      size: 10\n    });\n    return response;\n  },\n  // 删除交付物\n  async deleteDeliverable({\n    dispatch\n  }, id) {\n    await deleteDeliverable(id);\n    // 刷新列表\n    dispatch('getDeliverableList', {\n      page: 0,\n      size: 10\n    });\n  },\n  // 获取交付物统计\n  async getDeliverableStats({\n    commit\n  }) {\n    const response = await getDeliverableStats();\n    commit('SET_STATS', response);\n    return response;\n  }\n};\nconst getters = {\n  deliverableList: state => state.deliverableList,\n  currentDeliverable: state => state.currentDeliverable,\n  loading: state => state.loading,\n  pagination: state => state.pagination,\n  stats: state => state.stats\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["getDeliverableList","getDeliverableById","createDeliverable","updateDeliverable","deleteDeliverable","getDeliverableStats","state","deliverableList","currentDeliverable","loading","pagination","current","size","total","stats","mutations","SET_DELIVERABLE_LIST","list","SET_CURRENT_DELIVERABLE","deliverable","SET_LOADING","SET_PAGINATION","SET_STATS","actions","commit","params","response","content","currentPage","totalElements","id","dispatch","deliverableData","page","getters","namespaced"],"sources":["/Users/shaoliang/Documents/corsor_workplace/项目交付物管理/src/store/modules/deliverable.js"],"sourcesContent":["import { getDeliverableList, getDeliverableById, createDeliverable, updateDeliverable, deleteDeliverable, getDeliverableStats } from '@/api/deliverable'\n\nconst state = {\n  deliverableList: [],\n  currentDeliverable: null,\n  loading: false,\n  pagination: {\n    current: 1,\n    size: 10,\n    total: 0\n  },\n  stats: {}\n}\n\nconst mutations = {\n  SET_DELIVERABLE_LIST(state, list) {\n    state.deliverableList = list\n  },\n  SET_CURRENT_DELIVERABLE(state, deliverable) {\n    state.currentDeliverable = deliverable\n  },\n  SET_LOADING(state, loading) {\n    state.loading = loading\n  },\n  SET_PAGINATION(state, pagination) {\n    state.pagination = { ...state.pagination, ...pagination }\n  },\n  SET_STATS(state, stats) {\n    state.stats = stats\n  }\n}\n\nconst actions = {\n  // 获取交付物列表\n  async getDeliverableList({ commit }, params) {\n    commit('SET_LOADING', true)\n    try {\n      const response = await getDeliverableList(params)\n      commit('SET_DELIVERABLE_LIST', response.content)\n      commit('SET_PAGINATION', {\n        current: response.currentPage + 1,\n        total: response.totalElements\n      })\n      return response\n    } finally {\n      commit('SET_LOADING', false)\n    }\n  },\n\n  // 获取交付物详情\n  async getDeliverableById({ commit }, id) {\n    commit('SET_LOADING', true)\n    try {\n      const response = await getDeliverableById(id)\n      commit('SET_CURRENT_DELIVERABLE', response)\n      return response\n    } finally {\n      commit('SET_LOADING', false)\n    }\n  },\n\n  // 创建交付物\n  async createDeliverable({ dispatch }, deliverableData) {\n    const response = await createDeliverable(deliverableData)\n    // 刷新列表\n    dispatch('getDeliverableList', { page: 0, size: 10 })\n    return response\n  },\n\n  // 更新交付物\n  async updateDeliverable({ dispatch }, deliverableData) {\n    const response = await updateDeliverable(deliverableData)\n    // 刷新列表\n    dispatch('getDeliverableList', { page: 0, size: 10 })\n    return response\n  },\n\n  // 删除交付物\n  async deleteDeliverable({ dispatch }, id) {\n    await deleteDeliverable(id)\n    // 刷新列表\n    dispatch('getDeliverableList', { page: 0, size: 10 })\n  },\n\n  // 获取交付物统计\n  async getDeliverableStats({ commit }) {\n    const response = await getDeliverableStats()\n    commit('SET_STATS', response)\n    return response\n  }\n}\n\nconst getters = {\n  deliverableList: state => state.deliverableList,\n  currentDeliverable: state => state.currentDeliverable,\n  loading: state => state.loading,\n  pagination: state => state.pagination,\n  stats: state => state.stats\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters\n} "],"mappings":"AAAA,SAASA,kBAAkB,EAAEC,kBAAkB,EAAEC,iBAAiB,EAAEC,iBAAiB,EAAEC,iBAAiB,EAAEC,mBAAmB,QAAQ,mBAAmB;AAExJ,MAAMC,KAAK,GAAG;EACZC,eAAe,EAAE,EAAE;EACnBC,kBAAkB,EAAE,IAAI;EACxBC,OAAO,EAAE,KAAK;EACdC,UAAU,EAAE;IACVC,OAAO,EAAE,CAAC;IACVC,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE;EACT,CAAC;EACDC,KAAK,EAAE,CAAC;AACV,CAAC;AAED,MAAMC,SAAS,GAAG;EAChBC,oBAAoBA,CAACV,KAAK,EAAEW,IAAI,EAAE;IAChCX,KAAK,CAACC,eAAe,GAAGU,IAAI;EAC9B,CAAC;EACDC,uBAAuBA,CAACZ,KAAK,EAAEa,WAAW,EAAE;IAC1Cb,KAAK,CAACE,kBAAkB,GAAGW,WAAW;EACxC,CAAC;EACDC,WAAWA,CAACd,KAAK,EAAEG,OAAO,EAAE;IAC1BH,KAAK,CAACG,OAAO,GAAGA,OAAO;EACzB,CAAC;EACDY,cAAcA,CAACf,KAAK,EAAEI,UAAU,EAAE;IAChCJ,KAAK,CAACI,UAAU,GAAG;MAAE,GAAGJ,KAAK,CAACI,UAAU;MAAE,GAAGA;IAAW,CAAC;EAC3D,CAAC;EACDY,SAASA,CAAChB,KAAK,EAAEQ,KAAK,EAAE;IACtBR,KAAK,CAACQ,KAAK,GAAGA,KAAK;EACrB;AACF,CAAC;AAED,MAAMS,OAAO,GAAG;EACd;EACA,MAAMvB,kBAAkBA,CAAC;IAAEwB;EAAO,CAAC,EAAEC,MAAM,EAAE;IAC3CD,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC;IAC3B,IAAI;MACF,MAAME,QAAQ,GAAG,MAAM1B,kBAAkB,CAACyB,MAAM,CAAC;MACjDD,MAAM,CAAC,sBAAsB,EAAEE,QAAQ,CAACC,OAAO,CAAC;MAChDH,MAAM,CAAC,gBAAgB,EAAE;QACvBb,OAAO,EAAEe,QAAQ,CAACE,WAAW,GAAG,CAAC;QACjCf,KAAK,EAAEa,QAAQ,CAACG;MAClB,CAAC,CAAC;MACF,OAAOH,QAAQ;IACjB,CAAC,SAAS;MACRF,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC;IAC9B;EACF,CAAC;EAED;EACA,MAAMvB,kBAAkBA,CAAC;IAAEuB;EAAO,CAAC,EAAEM,EAAE,EAAE;IACvCN,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC;IAC3B,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMzB,kBAAkB,CAAC6B,EAAE,CAAC;MAC7CN,MAAM,CAAC,yBAAyB,EAAEE,QAAQ,CAAC;MAC3C,OAAOA,QAAQ;IACjB,CAAC,SAAS;MACRF,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC;IAC9B;EACF,CAAC;EAED;EACA,MAAMtB,iBAAiBA,CAAC;IAAE6B;EAAS,CAAC,EAAEC,eAAe,EAAE;IACrD,MAAMN,QAAQ,GAAG,MAAMxB,iBAAiB,CAAC8B,eAAe,CAAC;IACzD;IACAD,QAAQ,CAAC,oBAAoB,EAAE;MAAEE,IAAI,EAAE,CAAC;MAAErB,IAAI,EAAE;IAAG,CAAC,CAAC;IACrD,OAAOc,QAAQ;EACjB,CAAC;EAED;EACA,MAAMvB,iBAAiBA,CAAC;IAAE4B;EAAS,CAAC,EAAEC,eAAe,EAAE;IACrD,MAAMN,QAAQ,GAAG,MAAMvB,iBAAiB,CAAC6B,eAAe,CAAC;IACzD;IACAD,QAAQ,CAAC,oBAAoB,EAAE;MAAEE,IAAI,EAAE,CAAC;MAAErB,IAAI,EAAE;IAAG,CAAC,CAAC;IACrD,OAAOc,QAAQ;EACjB,CAAC;EAED;EACA,MAAMtB,iBAAiBA,CAAC;IAAE2B;EAAS,CAAC,EAAED,EAAE,EAAE;IACxC,MAAM1B,iBAAiB,CAAC0B,EAAE,CAAC;IAC3B;IACAC,QAAQ,CAAC,oBAAoB,EAAE;MAAEE,IAAI,EAAE,CAAC;MAAErB,IAAI,EAAE;IAAG,CAAC,CAAC;EACvD,CAAC;EAED;EACA,MAAMP,mBAAmBA,CAAC;IAAEmB;EAAO,CAAC,EAAE;IACpC,MAAME,QAAQ,GAAG,MAAMrB,mBAAmB,CAAC,CAAC;IAC5CmB,MAAM,CAAC,WAAW,EAAEE,QAAQ,CAAC;IAC7B,OAAOA,QAAQ;EACjB;AACF,CAAC;AAED,MAAMQ,OAAO,GAAG;EACd3B,eAAe,EAAED,KAAK,IAAIA,KAAK,CAACC,eAAe;EAC/CC,kBAAkB,EAAEF,KAAK,IAAIA,KAAK,CAACE,kBAAkB;EACrDC,OAAO,EAAEH,KAAK,IAAIA,KAAK,CAACG,OAAO;EAC/BC,UAAU,EAAEJ,KAAK,IAAIA,KAAK,CAACI,UAAU;EACrCI,KAAK,EAAER,KAAK,IAAIA,KAAK,CAACQ;AACxB,CAAC;AAED,eAAe;EACbqB,UAAU,EAAE,IAAI;EAChB7B,KAAK;EACLS,SAAS;EACTQ,OAAO;EACPW;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}