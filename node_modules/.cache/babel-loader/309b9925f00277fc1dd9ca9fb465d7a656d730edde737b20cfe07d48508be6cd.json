{"ast":null,"code":"import { mapActions } from 'vuex';\nimport { formatDate, formatDateTime, formatFileSize } from '@/utils/date';\nexport default {\n  name: 'ProjectDetail',\n  data() {\n    return {\n      loading: false,\n      deliverableLoading: false,\n      editLoading: false,\n      editDialogVisible: false,\n      projectId: null,\n      projectInfo: {},\n      deliverableList: [],\n      editForm: {\n        id: null,\n        name: '',\n        description: '',\n        manager: '',\n        startDate: '',\n        endDate: '',\n        status: ''\n      },\n      editRules: {\n        name: [{\n          required: true,\n          message: '请输入项目名称',\n          trigger: 'blur'\n        }],\n        manager: [{\n          required: true,\n          message: '请输入项目经理',\n          trigger: 'blur'\n        }],\n        startDate: [{\n          required: true,\n          message: '请选择开始日期',\n          trigger: 'change'\n        }],\n        status: [{\n          required: true,\n          message: '请选择项目状态',\n          trigger: 'change'\n        }]\n      },\n      pagination: {\n        current: 1,\n        size: 10,\n        total: 0\n      }\n    };\n  },\n  created() {\n    this.projectId = this.$route.params.id;\n    this.loadProjectDetail();\n    this.loadDeliverableList();\n  },\n  methods: {\n    ...mapActions('project', ['getProjectById', 'updateProject']),\n    ...mapActions('deliverable', ['getDeliverableList', 'deleteDeliverable']),\n    formatDate,\n    formatDateTime,\n    formatFileSize,\n    // 加载项目详情\n    async loadProjectDetail() {\n      this.loading = true;\n      try {\n        const response = await this.getProjectById(this.projectId);\n        this.projectInfo = response;\n      } catch (error) {\n        this.$message.error('加载项目详情失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 加载交付物列表\n    async loadDeliverableList() {\n      this.deliverableLoading = true;\n      try {\n        const params = {\n          page: this.pagination.current - 1,\n          size: this.pagination.size,\n          projectId: this.projectId\n        };\n        const response = await this.getDeliverableList(params);\n        this.deliverableList = response.content;\n        this.pagination.total = response.totalElements;\n      } catch (error) {\n        this.$message.error('加载交付物列表失败');\n      } finally {\n        this.deliverableLoading = false;\n      }\n    },\n    // 编辑项目\n    handleEdit() {\n      this.editForm = {\n        ...this.projectInfo\n      };\n      this.editDialogVisible = true;\n    },\n    // 提交编辑\n    handleEditSubmit() {\n      this.$refs.editForm.validate(async valid => {\n        if (valid) {\n          this.editLoading = true;\n          try {\n            await this.updateProject(this.editForm);\n            this.$message.success('更新成功');\n            this.editDialogVisible = false;\n            this.loadProjectDetail();\n          } catch (error) {\n            this.$message.error('更新失败');\n          } finally {\n            this.editLoading = false;\n          }\n        }\n      });\n    },\n    // 新增交付物\n    handleAddDeliverable() {\n      this.$router.push(`/deliverable/add?projectId=${this.projectId}`);\n    },\n    // 查看交付物\n    handleViewDeliverable(row) {\n      this.$router.push(`/deliverable/detail/${row.id}`);\n    },\n    // 编辑交付物\n    handleEditDeliverable(row) {\n      this.$router.push(`/deliverable/edit/${row.id}`);\n    },\n    // 下载文件\n    handleDownload(row) {\n      // 这里应该调用下载API\n      window.open(`/api/deliverables/${row.id}/download`, '_blank');\n    },\n    // 删除交付物\n    handleDeleteDeliverable(row) {\n      this.$confirm('确定要删除该交付物吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          await this.deleteDeliverable(row.id);\n          this.$message.success('删除成功');\n          this.loadDeliverableList();\n        } catch (error) {\n          this.$message.error('删除失败');\n        }\n      });\n    },\n    // 分页大小改变\n    handleSizeChange(size) {\n      this.pagination.size = size;\n      this.pagination.current = 1;\n      this.loadDeliverableList();\n    },\n    // 当前页改变\n    handleCurrentChange(current) {\n      this.pagination.current = current;\n      this.loadDeliverableList();\n    },\n    // 获取状态类型\n    getStatusType(status) {\n      const statusMap = {\n        'IN_PROGRESS': 'primary',\n        'COMPLETED': 'success',\n        'PAUSED': 'warning',\n        'CANCELLED': 'danger'\n      };\n      return statusMap[status] || 'info';\n    },\n    // 获取状态文本\n    getStatusText(status) {\n      const statusMap = {\n        'IN_PROGRESS': '进行中',\n        'COMPLETED': '已完成',\n        'PAUSED': '已暂停',\n        'CANCELLED': '已取消'\n      };\n      return statusMap[status] || status;\n    },\n    // 获取交付物状态类型\n    getDeliverableStatusType(status) {\n      const statusMap = {\n        'DRAFT': 'info',\n        'REVIEW': 'warning',\n        'APPROVED': 'success',\n        'REJECTED': 'danger'\n      };\n      return statusMap[status] || 'info';\n    },\n    // 获取交付物状态文本\n    getDeliverableStatusText(status) {\n      const statusMap = {\n        'DRAFT': '草稿',\n        'REVIEW': '审核中',\n        'APPROVED': '已通过',\n        'REJECTED': '已拒绝'\n      };\n      return statusMap[status] || status;\n    }\n  }\n};","map":{"version":3,"names":["mapActions","formatDate","formatDateTime","formatFileSize","name","data","loading","deliverableLoading","editLoading","editDialogVisible","projectId","projectInfo","deliverableList","editForm","id","description","manager","startDate","endDate","status","editRules","required","message","trigger","pagination","current","size","total","created","$route","params","loadProjectDetail","loadDeliverableList","methods","response","getProjectById","error","$message","page","getDeliverableList","content","totalElements","handleEdit","handleEditSubmit","$refs","validate","valid","updateProject","success","handleAddDeliverable","$router","push","handleViewDeliverable","row","handleEditDeliverable","handleDownload","window","open","handleDeleteDeliverable","$confirm","confirmButtonText","cancelButtonText","type","then","deleteDeliverable","handleSizeChange","handleCurrentChange","getStatusType","statusMap","getStatusText","getDeliverableStatusType","getDeliverableStatusText"],"sources":["/Users/shaoliang/Documents/corsor_workplace/项目交付物管理/src/views/Project/ProjectDetail.vue"],"sourcesContent":["<template>\n  <div class=\"project-detail\">\n    <div class=\"page-header\">\n      <el-breadcrumb separator=\"/\">\n        <el-breadcrumb-item :to=\"{ path: '/project' }\">项目管理</el-breadcrumb-item>\n        <el-breadcrumb-item>项目详情</el-breadcrumb-item>\n      </el-breadcrumb>\n      <div class=\"header-actions\">\n        <el-button @click=\"$router.go(-1)\">返回</el-button>\n        <el-button type=\"primary\" @click=\"handleEdit\">编辑项目</el-button>\n      </div>\n    </div>\n\n    <div v-loading=\"loading\" class=\"detail-content\">\n      <!-- 项目基本信息 -->\n      <el-card class=\"info-card\" shadow=\"never\">\n        <div slot=\"header\" class=\"card-header\">\n          <span>项目基本信息</span>\n        </div>\n        <el-row :gutter=\"20\">\n          <el-col :span=\"12\">\n            <div class=\"info-item\">\n              <label>项目名称：</label>\n              <span>{{ projectInfo.name }}</span>\n            </div>\n          </el-col>\n          <el-col :span=\"12\">\n            <div class=\"info-item\">\n              <label>项目经理：</label>\n              <span>{{ projectInfo.manager }}</span>\n            </div>\n          </el-col>\n          <el-col :span=\"12\">\n            <div class=\"info-item\">\n              <label>开始日期：</label>\n              <span>{{ formatDate(projectInfo.startDate) }}</span>\n            </div>\n          </el-col>\n          <el-col :span=\"12\">\n            <div class=\"info-item\">\n              <label>结束日期：</label>\n              <span>{{ formatDate(projectInfo.endDate) }}</span>\n            </div>\n          </el-col>\n          <el-col :span=\"12\">\n            <div class=\"info-item\">\n              <label>项目状态：</label>\n              <el-tag :type=\"getStatusType(projectInfo.status)\">\n                {{ getStatusText(projectInfo.status) }}\n              </el-tag>\n            </div>\n          </el-col>\n          <el-col :span=\"12\">\n            <div class=\"info-item\">\n              <label>创建时间：</label>\n              <span>{{ formatDateTime(projectInfo.createTime) }}</span>\n            </div>\n          </el-col>\n          <el-col :span=\"24\">\n            <div class=\"info-item\">\n              <label>项目描述：</label>\n              <div class=\"description\">{{ projectInfo.description || '暂无描述' }}</div>\n            </div>\n          </el-col>\n        </el-row>\n      </el-card>\n\n      <!-- 交付物列表 -->\n      <el-card class=\"deliverable-card\" shadow=\"never\">\n        <div slot=\"header\" class=\"card-header\">\n          <span>交付物列表</span>\n          <el-button type=\"primary\" size=\"small\" @click=\"handleAddDeliverable\">\n            <i class=\"el-icon-plus\"></i> 新增交付物\n          </el-button>\n        </div>\n        \n        <el-table\n          v-loading=\"deliverableLoading\"\n          :data=\"deliverableList\"\n          border\n          stripe\n          style=\"width: 100%\"\n        >\n          <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\n          <el-table-column prop=\"name\" label=\"交付物名称\" min-width=\"200\" />\n          <el-table-column prop=\"type\" label=\"类型\" width=\"120\">\n            <template slot-scope=\"scope\">\n              <el-tag size=\"small\">{{ scope.row.type }}</el-tag>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n            <template slot-scope=\"scope\">\n              <el-tag :type=\"getDeliverableStatusType(scope.row.status)\" size=\"small\">\n                {{ getDeliverableStatusText(scope.row.status) }}\n              </el-tag>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"fileSize\" label=\"文件大小\" width=\"100\">\n            <template slot-scope=\"scope\">\n              {{ formatFileSize(scope.row.fileSize) }}\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"uploadTime\" label=\"上传时间\" width=\"160\">\n            <template slot-scope=\"scope\">\n              {{ formatDateTime(scope.row.uploadTime) }}\n            </template>\n          </el-table-column>\n          <el-table-column label=\"操作\" width=\"200\" fixed=\"right\">\n            <template slot-scope=\"scope\">\n              <el-button size=\"mini\" @click=\"handleViewDeliverable(scope.row)\">查看</el-button>\n              <el-button size=\"mini\" type=\"primary\" @click=\"handleEditDeliverable(scope.row)\">编辑</el-button>\n              <el-button size=\"mini\" type=\"success\" @click=\"handleDownload(scope.row)\">下载</el-button>\n              <el-button size=\"mini\" type=\"danger\" @click=\"handleDeleteDeliverable(scope.row)\">删除</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n\n        <!-- 分页 -->\n        <div class=\"pagination-container\">\n          <el-pagination\n            :current-page=\"pagination.current\"\n            :page-sizes=\"[10, 20, 50, 100]\"\n            :page-size=\"pagination.size\"\n            :total=\"pagination.total\"\n            layout=\"total, sizes, prev, pager, next, jumper\"\n            @size-change=\"handleSizeChange\"\n            @current-change=\"handleCurrentChange\"\n          />\n        </div>\n      </el-card>\n    </div>\n\n    <!-- 编辑项目对话框 -->\n    <el-dialog\n      title=\"编辑项目\"\n      :visible.sync=\"editDialogVisible\"\n      width=\"600px\"\n    >\n      <el-form\n        ref=\"editForm\"\n        :model=\"editForm\"\n        :rules=\"editRules\"\n        label-width=\"100px\"\n      >\n        <el-form-item label=\"项目名称\" prop=\"name\">\n          <el-input v-model=\"editForm.name\" placeholder=\"请输入项目名称\" />\n        </el-form-item>\n        <el-form-item label=\"项目描述\" prop=\"description\">\n          <el-input\n            v-model=\"editForm.description\"\n            type=\"textarea\"\n            :rows=\"3\"\n            placeholder=\"请输入项目描述\"\n          />\n        </el-form-item>\n        <el-form-item label=\"项目经理\" prop=\"manager\">\n          <el-input v-model=\"editForm.manager\" placeholder=\"请输入项目经理\" />\n        </el-form-item>\n        <el-form-item label=\"开始日期\" prop=\"startDate\">\n          <el-date-picker\n            v-model=\"editForm.startDate\"\n            type=\"date\"\n            placeholder=\"选择开始日期\"\n            style=\"width: 100%\"\n          />\n        </el-form-item>\n        <el-form-item label=\"结束日期\" prop=\"endDate\">\n          <el-date-picker\n            v-model=\"editForm.endDate\"\n            type=\"date\"\n            placeholder=\"选择结束日期\"\n            style=\"width: 100%\"\n          />\n        </el-form-item>\n        <el-form-item label=\"项目状态\" prop=\"status\">\n          <el-select v-model=\"editForm.status\" placeholder=\"请选择状态\" style=\"width: 100%\">\n            <el-option label=\"进行中\" value=\"IN_PROGRESS\" />\n            <el-option label=\"已完成\" value=\"COMPLETED\" />\n            <el-option label=\"已暂停\" value=\"PAUSED\" />\n            <el-option label=\"已取消\" value=\"CANCELLED\" />\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editDialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"handleEditSubmit\" :loading=\"editLoading\">确定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\nimport { formatDate, formatDateTime, formatFileSize } from '@/utils/date'\n\nexport default {\n  name: 'ProjectDetail',\n  data() {\n    return {\n      loading: false,\n      deliverableLoading: false,\n      editLoading: false,\n      editDialogVisible: false,\n      projectId: null,\n      projectInfo: {},\n      deliverableList: [],\n      editForm: {\n        id: null,\n        name: '',\n        description: '',\n        manager: '',\n        startDate: '',\n        endDate: '',\n        status: ''\n      },\n      editRules: {\n        name: [\n          { required: true, message: '请输入项目名称', trigger: 'blur' }\n        ],\n        manager: [\n          { required: true, message: '请输入项目经理', trigger: 'blur' }\n        ],\n        startDate: [\n          { required: true, message: '请选择开始日期', trigger: 'change' }\n        ],\n        status: [\n          { required: true, message: '请选择项目状态', trigger: 'change' }\n        ]\n      },\n      pagination: {\n        current: 1,\n        size: 10,\n        total: 0\n      }\n    }\n  },\n  created() {\n    this.projectId = this.$route.params.id\n    this.loadProjectDetail()\n    this.loadDeliverableList()\n  },\n  methods: {\n    ...mapActions('project', ['getProjectById', 'updateProject']),\n    ...mapActions('deliverable', ['getDeliverableList', 'deleteDeliverable']),\n    \n    formatDate,\n    formatDateTime,\n    formatFileSize,\n    \n    // 加载项目详情\n    async loadProjectDetail() {\n      this.loading = true\n      try {\n        const response = await this.getProjectById(this.projectId)\n        this.projectInfo = response\n      } catch (error) {\n        this.$message.error('加载项目详情失败')\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    // 加载交付物列表\n    async loadDeliverableList() {\n      this.deliverableLoading = true\n      try {\n        const params = {\n          page: this.pagination.current - 1,\n          size: this.pagination.size,\n          projectId: this.projectId\n        }\n        const response = await this.getDeliverableList(params)\n        this.deliverableList = response.content\n        this.pagination.total = response.totalElements\n      } catch (error) {\n        this.$message.error('加载交付物列表失败')\n      } finally {\n        this.deliverableLoading = false\n      }\n    },\n    \n    // 编辑项目\n    handleEdit() {\n      this.editForm = { ...this.projectInfo }\n      this.editDialogVisible = true\n    },\n    \n    // 提交编辑\n    handleEditSubmit() {\n      this.$refs.editForm.validate(async (valid) => {\n        if (valid) {\n          this.editLoading = true\n          try {\n            await this.updateProject(this.editForm)\n            this.$message.success('更新成功')\n            this.editDialogVisible = false\n            this.loadProjectDetail()\n          } catch (error) {\n            this.$message.error('更新失败')\n          } finally {\n            this.editLoading = false\n          }\n        }\n      })\n    },\n    \n    // 新增交付物\n    handleAddDeliverable() {\n      this.$router.push(`/deliverable/add?projectId=${this.projectId}`)\n    },\n    \n    // 查看交付物\n    handleViewDeliverable(row) {\n      this.$router.push(`/deliverable/detail/${row.id}`)\n    },\n    \n    // 编辑交付物\n    handleEditDeliverable(row) {\n      this.$router.push(`/deliverable/edit/${row.id}`)\n    },\n    \n    // 下载文件\n    handleDownload(row) {\n      // 这里应该调用下载API\n      window.open(`/api/deliverables/${row.id}/download`, '_blank')\n    },\n    \n    // 删除交付物\n    handleDeleteDeliverable(row) {\n      this.$confirm('确定要删除该交付物吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          await this.deleteDeliverable(row.id)\n          this.$message.success('删除成功')\n          this.loadDeliverableList()\n        } catch (error) {\n          this.$message.error('删除失败')\n        }\n      })\n    },\n    \n    // 分页大小改变\n    handleSizeChange(size) {\n      this.pagination.size = size\n      this.pagination.current = 1\n      this.loadDeliverableList()\n    },\n    \n    // 当前页改变\n    handleCurrentChange(current) {\n      this.pagination.current = current\n      this.loadDeliverableList()\n    },\n    \n    // 获取状态类型\n    getStatusType(status) {\n      const statusMap = {\n        'IN_PROGRESS': 'primary',\n        'COMPLETED': 'success',\n        'PAUSED': 'warning',\n        'CANCELLED': 'danger'\n      }\n      return statusMap[status] || 'info'\n    },\n    \n    // 获取状态文本\n    getStatusText(status) {\n      const statusMap = {\n        'IN_PROGRESS': '进行中',\n        'COMPLETED': '已完成',\n        'PAUSED': '已暂停',\n        'CANCELLED': '已取消'\n      }\n      return statusMap[status] || status\n    },\n    \n    // 获取交付物状态类型\n    getDeliverableStatusType(status) {\n      const statusMap = {\n        'DRAFT': 'info',\n        'REVIEW': 'warning',\n        'APPROVED': 'success',\n        'REJECTED': 'danger'\n      }\n      return statusMap[status] || 'info'\n    },\n    \n    // 获取交付物状态文本\n    getDeliverableStatusText(status) {\n      const statusMap = {\n        'DRAFT': '草稿',\n        'REVIEW': '审核中',\n        'APPROVED': '已通过',\n        'REJECTED': '已拒绝'\n      }\n      return statusMap[status] || status\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.project-detail {\n  padding: 20px;\n  \n  .page-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 20px;\n    \n    .header-actions {\n      .el-button {\n        margin-left: 10px;\n      }\n    }\n  }\n  \n  .detail-content {\n    .info-card {\n      margin-bottom: 20px;\n      \n      .card-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n      }\n      \n      .info-item {\n        margin-bottom: 15px;\n        \n        label {\n          font-weight: bold;\n          color: #606266;\n          margin-right: 10px;\n        }\n        \n        .description {\n          margin-top: 10px;\n          padding: 10px;\n          background: #f5f7fa;\n          border-radius: 4px;\n          line-height: 1.6;\n        }\n      }\n    }\n    \n    .deliverable-card {\n      .card-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n      }\n      \n      .pagination-container {\n        padding: 20px;\n        text-align: right;\n      }\n    }\n  }\n}\n</style> "],"mappings":"AAgMA,SAASA,UAAS,QAAS,MAAK;AAChC,SAASC,UAAU,EAAEC,cAAc,EAAEC,cAAa,QAAS,cAAa;AAExE,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,KAAK;MACdC,kBAAkB,EAAE,KAAK;MACzBC,WAAW,EAAE,KAAK;MAClBC,iBAAiB,EAAE,KAAK;MACxBC,SAAS,EAAE,IAAI;MACfC,WAAW,EAAE,CAAC,CAAC;MACfC,eAAe,EAAE,EAAE;MACnBC,QAAQ,EAAE;QACRC,EAAE,EAAE,IAAI;QACRV,IAAI,EAAE,EAAE;QACRW,WAAW,EAAE,EAAE;QACfC,OAAO,EAAE,EAAE;QACXC,SAAS,EAAE,EAAE;QACbC,OAAO,EAAE,EAAE;QACXC,MAAM,EAAE;MACV,CAAC;MACDC,SAAS,EAAE;QACThB,IAAI,EAAE,CACJ;UAAEiB,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,SAAS;UAAEC,OAAO,EAAE;QAAO,EACvD;QACDP,OAAO,EAAE,CACP;UAAEK,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,SAAS;UAAEC,OAAO,EAAE;QAAO,EACvD;QACDN,SAAS,EAAE,CACT;UAAEI,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,SAAS;UAAEC,OAAO,EAAE;QAAS,EACzD;QACDJ,MAAM,EAAE,CACN;UAAEE,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,SAAS;UAAEC,OAAO,EAAE;QAAS;MAE5D,CAAC;MACDC,UAAU,EAAE;QACVC,OAAO,EAAE,CAAC;QACVC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE;MACT;IACF;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAAClB,SAAQ,GAAI,IAAI,CAACmB,MAAM,CAACC,MAAM,CAAChB,EAAC;IACrC,IAAI,CAACiB,iBAAiB,CAAC;IACvB,IAAI,CAACC,mBAAmB,CAAC;EAC3B,CAAC;EACDC,OAAO,EAAE;IACP,GAAGjC,UAAU,CAAC,SAAS,EAAE,CAAC,gBAAgB,EAAE,eAAe,CAAC,CAAC;IAC7D,GAAGA,UAAU,CAAC,aAAa,EAAE,CAAC,oBAAoB,EAAE,mBAAmB,CAAC,CAAC;IAEzEC,UAAU;IACVC,cAAc;IACdC,cAAc;IAEd;IACA,MAAM4B,iBAAiBA,CAAA,EAAG;MACxB,IAAI,CAACzB,OAAM,GAAI,IAAG;MAClB,IAAI;QACF,MAAM4B,QAAO,GAAI,MAAM,IAAI,CAACC,cAAc,CAAC,IAAI,CAACzB,SAAS;QACzD,IAAI,CAACC,WAAU,GAAIuB,QAAO;MAC5B,EAAE,OAAOE,KAAK,EAAE;QACd,IAAI,CAACC,QAAQ,CAACD,KAAK,CAAC,UAAU;MAChC,UAAU;QACR,IAAI,CAAC9B,OAAM,GAAI,KAAI;MACrB;IACF,CAAC;IAED;IACA,MAAM0B,mBAAmBA,CAAA,EAAG;MAC1B,IAAI,CAACzB,kBAAiB,GAAI,IAAG;MAC7B,IAAI;QACF,MAAMuB,MAAK,GAAI;UACbQ,IAAI,EAAE,IAAI,CAACd,UAAU,CAACC,OAAM,GAAI,CAAC;UACjCC,IAAI,EAAE,IAAI,CAACF,UAAU,CAACE,IAAI;UAC1BhB,SAAS,EAAE,IAAI,CAACA;QAClB;QACA,MAAMwB,QAAO,GAAI,MAAM,IAAI,CAACK,kBAAkB,CAACT,MAAM;QACrD,IAAI,CAAClB,eAAc,GAAIsB,QAAQ,CAACM,OAAM;QACtC,IAAI,CAAChB,UAAU,CAACG,KAAI,GAAIO,QAAQ,CAACO,aAAY;MAC/C,EAAE,OAAOL,KAAK,EAAE;QACd,IAAI,CAACC,QAAQ,CAACD,KAAK,CAAC,WAAW;MACjC,UAAU;QACR,IAAI,CAAC7B,kBAAiB,GAAI,KAAI;MAChC;IACF,CAAC;IAED;IACAmC,UAAUA,CAAA,EAAG;MACX,IAAI,CAAC7B,QAAO,GAAI;QAAE,GAAG,IAAI,CAACF;MAAY;MACtC,IAAI,CAACF,iBAAgB,GAAI,IAAG;IAC9B,CAAC;IAED;IACAkC,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACC,KAAK,CAAC/B,QAAQ,CAACgC,QAAQ,CAAC,MAAOC,KAAK,IAAK;QAC5C,IAAIA,KAAK,EAAE;UACT,IAAI,CAACtC,WAAU,GAAI,IAAG;UACtB,IAAI;YACF,MAAM,IAAI,CAACuC,aAAa,CAAC,IAAI,CAAClC,QAAQ;YACtC,IAAI,CAACwB,QAAQ,CAACW,OAAO,CAAC,MAAM;YAC5B,IAAI,CAACvC,iBAAgB,GAAI,KAAI;YAC7B,IAAI,CAACsB,iBAAiB,CAAC;UACzB,EAAE,OAAOK,KAAK,EAAE;YACd,IAAI,CAACC,QAAQ,CAACD,KAAK,CAAC,MAAM;UAC5B,UAAU;YACR,IAAI,CAAC5B,WAAU,GAAI,KAAI;UACzB;QACF;MACF,CAAC;IACH,CAAC;IAED;IACAyC,oBAAoBA,CAAA,EAAG;MACrB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,8BAA8B,IAAI,CAACzC,SAAS,EAAE;IAClE,CAAC;IAED;IACA0C,qBAAqBA,CAACC,GAAG,EAAE;MACzB,IAAI,CAACH,OAAO,CAACC,IAAI,CAAC,uBAAuBE,GAAG,CAACvC,EAAE,EAAE;IACnD,CAAC;IAED;IACAwC,qBAAqBA,CAACD,GAAG,EAAE;MACzB,IAAI,CAACH,OAAO,CAACC,IAAI,CAAC,qBAAqBE,GAAG,CAACvC,EAAE,EAAE;IACjD,CAAC;IAED;IACAyC,cAAcA,CAACF,GAAG,EAAE;MAClB;MACAG,MAAM,CAACC,IAAI,CAAC,qBAAqBJ,GAAG,CAACvC,EAAE,WAAW,EAAE,QAAQ;IAC9D,CAAC;IAED;IACA4C,uBAAuBA,CAACL,GAAG,EAAE;MAC3B,IAAI,CAACM,QAAQ,CAAC,aAAa,EAAE,IAAI,EAAE;QACjCC,iBAAiB,EAAE,IAAI;QACvBC,gBAAgB,EAAE,IAAI;QACtBC,IAAI,EAAE;MACR,CAAC,CAAC,CAACC,IAAI,CAAC,YAAY;QAClB,IAAI;UACF,MAAM,IAAI,CAACC,iBAAiB,CAACX,GAAG,CAACvC,EAAE;UACnC,IAAI,CAACuB,QAAQ,CAACW,OAAO,CAAC,MAAM;UAC5B,IAAI,CAAChB,mBAAmB,CAAC;QAC3B,EAAE,OAAOI,KAAK,EAAE;UACd,IAAI,CAACC,QAAQ,CAACD,KAAK,CAAC,MAAM;QAC5B;MACF,CAAC;IACH,CAAC;IAED;IACA6B,gBAAgBA,CAACvC,IAAI,EAAE;MACrB,IAAI,CAACF,UAAU,CAACE,IAAG,GAAIA,IAAG;MAC1B,IAAI,CAACF,UAAU,CAACC,OAAM,GAAI;MAC1B,IAAI,CAACO,mBAAmB,CAAC;IAC3B,CAAC;IAED;IACAkC,mBAAmBA,CAACzC,OAAO,EAAE;MAC3B,IAAI,CAACD,UAAU,CAACC,OAAM,GAAIA,OAAM;MAChC,IAAI,CAACO,mBAAmB,CAAC;IAC3B,CAAC;IAED;IACAmC,aAAaA,CAAChD,MAAM,EAAE;MACpB,MAAMiD,SAAQ,GAAI;QAChB,aAAa,EAAE,SAAS;QACxB,WAAW,EAAE,SAAS;QACtB,QAAQ,EAAE,SAAS;QACnB,WAAW,EAAE;MACf;MACA,OAAOA,SAAS,CAACjD,MAAM,KAAK,MAAK;IACnC,CAAC;IAED;IACAkD,aAAaA,CAAClD,MAAM,EAAE;MACpB,MAAMiD,SAAQ,GAAI;QAChB,aAAa,EAAE,KAAK;QACpB,WAAW,EAAE,KAAK;QAClB,QAAQ,EAAE,KAAK;QACf,WAAW,EAAE;MACf;MACA,OAAOA,SAAS,CAACjD,MAAM,KAAKA,MAAK;IACnC,CAAC;IAED;IACAmD,wBAAwBA,CAACnD,MAAM,EAAE;MAC/B,MAAMiD,SAAQ,GAAI;QAChB,OAAO,EAAE,MAAM;QACf,QAAQ,EAAE,SAAS;QACnB,UAAU,EAAE,SAAS;QACrB,UAAU,EAAE;MACd;MACA,OAAOA,SAAS,CAACjD,MAAM,KAAK,MAAK;IACnC,CAAC;IAED;IACAoD,wBAAwBA,CAACpD,MAAM,EAAE;MAC/B,MAAMiD,SAAQ,GAAI;QAChB,OAAO,EAAE,IAAI;QACb,QAAQ,EAAE,KAAK;QACf,UAAU,EAAE,KAAK;QACjB,UAAU,EAAE;MACd;MACA,OAAOA,SAAS,CAACjD,MAAM,KAAKA,MAAK;IACnC;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}